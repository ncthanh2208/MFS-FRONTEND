{"ast":null,"code":"var _jsxFileName = \"D:\\\\MSF\\\\MSF-FRONTEND\\\\lib\\\\src\\\\components\\\\files\\\\viewfile\\\\file.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport NavbarIndex from '../../nav-bar/IndexNavbar';\nimport Http from '../../../http/apiService';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FileView = () => {\n  _s();\n\n  let history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState([]);\n  const [dataComment, setDataComment] = useState([]);\n\n  const GetFile = async () => {\n    const url = '/files/getfile/' + id;\n    const resp = await Http.getSth(url);\n    setData(resp.data);\n  };\n\n  const getComment = async () => {\n    const url = '/comments/' + id;\n    const resp = await Http.getSth(url);\n    setDataComment(resp.data);\n  };\n\n  useEffect(() => {\n    GetFile();\n    getComment();\n  }, []);\n\n  const upComment = async () => {\n    const url = '/comments/' + localStorage.getItem('username') + '/' + id;\n    await Http.postSth(url, value);\n    setDataComment(oldData => [...oldData, value, data.userName]);\n    console.log(data);\n  };\n\n  const [value, setValue] = useState({\n    content: ''\n  });\n\n  const handleOnChage = event => {\n    setValue({ ...value,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  console.log(dataComment);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarIndex, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"File Name: \", data.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User: \", data.userName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Comment: \", data.comment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), dataComment && dataComment.map(element => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Comment: \", element.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User: \", element.userName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true);\n      }), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Comment\",\n        variant: \"outlined\",\n        onChange: handleOnChage,\n        value: value.content,\n        name: \"content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: upComment,\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FileView, \"srS5JeOVxdgwY8Q1X/2OVwXpIJk=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = FileView;\nexport default FileView;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileView\");","map":{"version":3,"sources":["D:/MSF/MSF-FRONTEND/lib/src/components/files/viewfile/file.js"],"names":["React","useState","useEffect","useParams","NavbarIndex","Http","Button","TextField","useHistory","FileView","history","id","data","setData","dataComment","setDataComment","GetFile","url","resp","getSth","getComment","upComment","localStorage","getItem","postSth","value","oldData","userName","console","log","setValue","content","handleOnChage","event","target","name","comment","map","element"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,MAAIC,OAAO,GAAGF,UAAU,EAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAASR,SAAS,EAAxB;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMe,OAAO,GAAG,YAAY;AACxB,UAAMC,GAAG,GAAG,oBAAoBN,EAAhC;AACA,UAAMO,IAAI,GAAG,MAAMb,IAAI,CAACc,MAAL,CAAYF,GAAZ,CAAnB;AACAJ,IAAAA,OAAO,CAACK,IAAI,CAACN,IAAN,CAAP;AACH,GAJD;;AAKA,QAAMQ,UAAU,GAAG,YAAY;AAC3B,UAAMH,GAAG,GAAG,eAAeN,EAA3B;AACA,UAAMO,IAAI,GAAG,MAAMb,IAAI,CAACc,MAAL,CAAYF,GAAZ,CAAnB;AACAF,IAAAA,cAAc,CAACG,IAAI,CAACN,IAAN,CAAd;AACH,GAJD;;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,OAAO;AACPI,IAAAA,UAAU;AACb,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,SAAS,GAAG,YAAY;AAC1B,UAAMJ,GAAG,GAAG,eAAeK,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf,GAAkD,GAAlD,GAAwDZ,EAApE;AACA,UAAMN,IAAI,CAACmB,OAAL,CAAaP,GAAb,EAAkBQ,KAAlB,CAAN;AACAV,IAAAA,cAAc,CAACW,OAAO,IAAI,CAAC,GAAGA,OAAJ,EAAaD,KAAb,EAAoBb,IAAI,CAACe,QAAzB,CAAZ,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACH,GALD;;AAOA,QAAM,CAACa,KAAD,EAAQK,QAAR,IAAoB7B,QAAQ,CAAC;AAC/B8B,IAAAA,OAAO,EAAE;AADsB,GAAD,CAAlC;;AAKA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7BH,IAAAA,QAAQ,CAAC,EACL,GAAGL,KADE;AAEL,OAACQ,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaT;AAF7B,KAAD,CAAR;AAIH,GALD;;AAMAG,EAAAA,OAAO,CAACC,GAAR,CAAYf,WAAZ;AACA,sBACI;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAA,kCAAeF,IAAI,CAACuB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,6BAAUvB,IAAI,CAACe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,gCAAaf,IAAI,CAACwB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAKKtB,WAAW,IAAIA,WAAW,CAACuB,GAAZ,CAAiBC,OAAD,IAAa;AACzC,4BACI;AAAA,kCACI;AAAA,oCAAaA,OAAO,CAACP,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,iCAAUO,OAAO,CAACX,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,wBADJ;AAMH,OAPe,CALpB,eAeI,QAAC,SAAD;AAAW,QAAA,EAAE,EAAC,gBAAd;AAA+B,QAAA,KAAK,EAAC,SAArC;AAA+C,QAAA,OAAO,EAAC,UAAvD;AAAkE,QAAA,QAAQ,EAAEK,aAA5E;AAA2F,QAAA,KAAK,EAAEP,KAAK,CAACM,OAAxG;AAAiH,QAAA,IAAI,EAAC;AAAtH;AAAA;AAAA;AAAA;AAAA,cAfJ,eAiBI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEV,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAyBH,CAjED;;GAAMZ,Q;UACYD,U,EACCL,S;;;KAFbM,Q;AAmEN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport NavbarIndex from '../../nav-bar/IndexNavbar';\r\nimport Http from '../../../http/apiService';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst FileView = () => {\r\n    let history = useHistory();\r\n    const { id } = useParams();\r\n    const [data, setData] = useState([]);\r\n\r\n    const [dataComment, setDataComment] = useState([]);\r\n    const GetFile = async () => {\r\n        const url = '/files/getfile/' + id;\r\n        const resp = await Http.getSth(url)\r\n        setData(resp.data);\r\n    }\r\n    const getComment = async () => {\r\n        const url = '/comments/' + id;\r\n        const resp = await Http.getSth(url);\r\n        setDataComment(resp.data);\r\n    }\r\n    useEffect(() => {\r\n        GetFile();\r\n        getComment();\r\n    }, []);\r\n\r\n    const upComment = async () => {\r\n        const url = '/comments/' + localStorage.getItem('username') + '/' + id;\r\n        await Http.postSth(url, value);\r\n        setDataComment(oldData => [...oldData, value, data.userName]);\r\n        console.log(data)\r\n    }\r\n\r\n    const [value, setValue] = useState({\r\n        content: '',\r\n\r\n    });\r\n\r\n    const handleOnChage = (event) => {\r\n        setValue({\r\n            ...value,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n    console.log(dataComment)\r\n    return (\r\n        <>\r\n            <NavbarIndex />\r\n            <div className=\"container-fluid\">\r\n                <p>File Name: {data.name}</p>\r\n                <p>User: {data.userName}</p>\r\n                <p>Comment: {data.comment}</p>\r\n\r\n                {dataComment && dataComment.map((element) => {\r\n                    return (\r\n                        <>\r\n                            <p>Comment: {element.content}</p>\r\n                            <p>User: {element.userName}</p>\r\n                        </>\r\n                    )\r\n                }\r\n                )\r\n                }\r\n                <TextField id=\"outlined-basic\" label=\"Comment\" variant=\"outlined\" onChange={handleOnChage} value={value.content} name=\"content\" />\r\n\r\n                <Button onClick={upComment}>Comment</Button>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FileView;"]},"metadata":{},"sourceType":"module"}