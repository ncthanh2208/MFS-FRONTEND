{"ast":null,"code":"import axios from 'axios';\nconst API_SERVER = 'http://localhost:9191/';\nconst TOKEN = localStorage.getItem('token') || '';\nconsole.log(TOKEN);\nconst axiosInstance = axios.create({\n  withCredentials: true,\n  baseURL: API_SERVER,\n  headers: {\n    Authorization: TOKEN,\n    mode: 'cors'\n  }\n});\n\nconst successHandler = response => {\n  console.log(response);\n  const isStatus = response.data.status;\n  const {\n    status: statusCode\n  } = response;\n\n  if (isStatus) {\n    return {\n      status: true,\n      data: response.data.data || null,\n      statusCode\n    };\n  }\n\n  if (isStatus === false) {\n    return {\n      status: false,\n      data: null\n    };\n  }\n\n  return {\n    status: true,\n    data: response.data || null,\n    statusCode\n  };\n};\n\nconst errorHandler = error => {\n  const {\n    status: statusCode\n  } = error;\n  return {\n    status: false,\n    error,\n    statusCode,\n    data: null\n  };\n};\n\naxiosInstance.interceptors.response.use(response => successHandler(response), error => errorHandler(error));\nexport default axiosInstance;","map":{"version":3,"sources":["D:/MSF/MSF-FRONTEND/lib/src/http/interceptor.js"],"names":["axios","API_SERVER","TOKEN","localStorage","getItem","console","log","axiosInstance","create","withCredentials","baseURL","headers","Authorization","mode","successHandler","response","isStatus","data","status","statusCode","errorHandler","error","interceptors","use"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,UAAU,GAAG,wBAAnB;AAEA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,EAA/C;AACAC,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,MAAMK,aAAa,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAClCC,EAAAA,eAAe,EAAE,IADiB;AAElCC,EAAAA,OAAO,EAAET,UAFyB;AAGlCU,EAAAA,OAAO,EAAE;AACRC,IAAAA,aAAa,EAAEV,KADP;AAERW,IAAAA,IAAI,EAAE;AAFE;AAHyB,CAAb,CAAtB;;AAQA,MAAMC,cAAc,GAAIC,QAAD,IAAc;AACpCV,EAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AACA,QAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,CAAcC,MAA/B;AACA,QAAM;AAAEA,IAAAA,MAAM,EAAEC;AAAV,MAAyBJ,QAA/B;;AACA,MAAIC,QAAJ,EAAc;AACb,WAAO;AACNE,MAAAA,MAAM,EAAE,IADF;AAEND,MAAAA,IAAI,EAAEF,QAAQ,CAACE,IAAT,CAAcA,IAAd,IAAqB,IAFrB;AAGNE,MAAAA;AAHM,KAAP;AAKA;;AACD,MAAIH,QAAQ,KAAK,KAAjB,EAAwB;AACvB,WAAO;AACNE,MAAAA,MAAM,EAAE,KADF;AAEND,MAAAA,IAAI,EAAE;AAFA,KAAP;AAIA;;AACD,SAAO;AACNC,IAAAA,MAAM,EAAE,IADF;AAEND,IAAAA,IAAI,EAAEF,QAAQ,CAACE,IAAT,IAAiB,IAFjB;AAGNE,IAAAA;AAHM,GAAP;AAKA,CAtBD;;AAuBA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAEH,IAAAA,MAAM,EAAEC;AAAV,MAAyBE,KAA/B;AACA,SAAO;AACNH,IAAAA,MAAM,EAAE,KADF;AAENG,IAAAA,KAFM;AAGNF,IAAAA,UAHM;AAINF,IAAAA,IAAI,EAAE;AAJA,GAAP;AAMA,CARD;;AASAV,aAAa,CAACe,YAAd,CAA2BP,QAA3B,CAAoCQ,GAApC,CACER,QAAD,IAAcD,cAAc,CAACC,QAAD,CAD7B,EAEEM,KAAD,IAAWD,YAAY,CAACC,KAAD,CAFxB;AAKA,eAAed,aAAf","sourcesContent":["import axios from 'axios';\r\nconst API_SERVER = 'http://localhost:9191/';\r\n\r\nconst TOKEN = localStorage.getItem('token') || '';\r\nconsole.log(TOKEN);\r\nconst axiosInstance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: API_SERVER,\r\n\theaders: {\r\n\t\tAuthorization: TOKEN,\r\n\t\tmode: 'cors',\r\n\t},\r\n});\r\nconst successHandler = (response) => {\r\n\tconsole.log(response)\r\n\tconst isStatus = response.data.status;\r\n\tconst { status: statusCode } = response;\r\n\tif (isStatus) {\r\n\t\treturn {\r\n\t\t\tstatus: true,\r\n\t\t\tdata: response.data.data|| null,\r\n\t\t\tstatusCode,\r\n\t\t};\r\n\t}\r\n\tif (isStatus === false) {\r\n\t\treturn {\r\n\t\t\tstatus: false,\r\n\t\t\tdata: null,\r\n\t\t};\r\n\t}\r\n\treturn {\r\n\t\tstatus: true,\r\n\t\tdata: response.data || null,\r\n\t\tstatusCode,\r\n\t};\r\n};\r\nconst errorHandler = (error) => {\r\n\tconst { status: statusCode } = error;\r\n\treturn {\r\n\t\tstatus: false,\r\n\t\terror,\r\n\t\tstatusCode,\r\n\t\tdata: null,\r\n\t};\r\n};\r\naxiosInstance.interceptors.response.use(\r\n\t(response) => successHandler(response),\r\n\t(error) => errorHandler(error)\r\n);\r\n\r\nexport default axiosInstance;\r\n"]},"metadata":{},"sourceType":"module"}