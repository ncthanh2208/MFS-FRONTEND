{"ast":null,"code":"var _jsxFileName = \"D:\\\\MSF\\\\MSF-FRONTEND\\\\lib\\\\src\\\\components\\\\dashboard\\\\AdminView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Snavbar } from '../nav-bar/StyleNavBar';\nimport LogoutIndex from '../login/logout/LogoutIndex';\nimport { Button } from '@material-ui/core';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Http from '../../http/apiService';\nimport Popover from '@material-ui/core/Popover';\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'userName',\n  label: 'User Name',\n  minWidth: 100\n}, {\n  id: 'email',\n  label: 'Email',\n  minWidth: 170\n}, {\n  id: 'role',\n  label: 'Role',\n  minWidth: 100,\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'level',\n  label: 'Level',\n  minWidth: 100,\n  format: value => value.toLocaleString('en-US')\n}, {\n  label: 'Action',\n  minWidth: 170\n}];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 800\n  }\n});\nexport default function AdminView() {\n  _s();\n\n  //------------------------------\n  useEffect(() => {\n    GetUser();\n  }, []);\n  const [data, setData] = useState([]);\n\n  const GetUser = async () => {\n    const resp = await Http.getSth('/users');\n    setData(resp.data);\n  }; //------------------------\n\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleUpdate = id => {\n    console.log(id);\n  };\n\n  const handleDelete = async id => {\n    const url = '/users/' + id;\n    const resp = await Http.deleteSth(url);\n    console.log(resp);\n  };\n\n  const Component = id => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleUpdate(id),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleDelete(id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: [column.format && typeof value === 'number' ? column.format(value) : value, column.label === 'Action' && Component(row.id)]\n                }, column.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 23\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: data.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminView, \"KDPycCv4+raxs1QCq0wsHeqKcfA=\", false, function () {\n  return [useStyles];\n});\n\n_c = AdminView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminView\");","map":{"version":3,"sources":["D:/MSF/MSF-FRONTEND/lib/src/components/dashboard/AdminView.js"],"names":["React","useState","useEffect","Snavbar","LogoutIndex","Button","Link","useHistory","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Http","Popover","PopupState","bindTrigger","bindPopover","columns","id","label","minWidth","format","value","toLocaleString","useStyles","root","width","container","maxHeight","AdminView","GetUser","data","setData","resp","getSth","classes","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","handleUpdate","console","log","handleDelete","url","deleteSth","Component","map","column","align","slice","row","code","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {Snavbar} from '../nav-bar/StyleNavBar';\r\nimport LogoutIndex from '../login/logout/LogoutIndex';\r\nimport { Button } from '@material-ui/core';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Http from '../../http/apiService';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\r\n\r\nconst columns = [\r\n  { id: 'userName', label: 'User Name', minWidth: 100 },\r\n  { id: 'email', label: 'Email', minWidth: 170 },\r\n  {\r\n    id: 'role',\r\n    label: 'Role',\r\n    minWidth: 100,\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'level',\r\n    label: 'Level',\r\n    minWidth: 100,\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    label: 'Action',\r\n    minWidth: 170,\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 800,\r\n  },\r\n});\r\n\r\nexport default function AdminView() {\r\n\r\n//------------------------------\r\n    useEffect(() => {\r\n        GetUser();\r\n    }, []);\r\nconst [data, setData] = useState([]);\r\n\r\nconst GetUser = async () => {\r\n        const resp = await Http.getSth('/users');\r\n        setData(resp.data)\r\n    }\r\n//------------------------\r\n\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const handleUpdate = (id) => {\r\n      console.log(id)\r\n  }\r\n   const handleDelete =async (id) => {\r\n      const url ='/users/'+id;\r\n      const resp = await Http.deleteSth(url);\r\n      \r\n      console.log(resp);\r\n  }\r\n    const Component = (id) => {\r\n        return (\r\n        <>\r\n        <Button onClick={() => handleUpdate(id)}>Update</Button>\r\n        <Button onClick={() => handleDelete(id)}>Delete</Button>\r\n        </>\r\n    )\r\n    }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                        {column.label === 'Action' && Component(row.id)}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}