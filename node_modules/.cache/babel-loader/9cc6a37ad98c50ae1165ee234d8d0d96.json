{"ast":null,"code":"var _jsxFileName = \"D:\\\\MSF\\\\MSF-FRONTEND\\\\lib\\\\src\\\\components\\\\upload\\\\UploadIndex.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport TextField from '@material-ui/core/TextField';\nimport Http from '../../http/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpLoadForm = () => {\n  _s();\n\n  let history = useHistory();\n  const [description, setValue] = useState({\n    category: '',\n    comment: ''\n  });\n  const [dataFile, setDataFile] = useState();\n\n  const handleOnChage = event => {\n    setValue({ ...description,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const upload = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", dataFile);\n    const resp = await Http.postSth(`files/${localStorage.getItem('username')}`, formData);\n    const url = '/files/' + resp.data;\n    const response = await Http.putSth(url, description);\n\n    if (response.statusCode === 200) {\n      alert(\"Upload Successful!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n      history.push(\"/\");\n    }\n  };\n\n  const handleUploadFile = event => {\n    setDataFile(event.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"upload\",\n      className: \"upfile\",\n      onChange: handleUploadFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"Category\",\n      variant: \"outlined\",\n      onChange: handleOnChage,\n      value: description.category,\n      name: \"category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"Comment\",\n      variant: \"outlined\",\n      onChange: handleOnChage,\n      value: description.comment,\n      name: \"comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-signin\",\n      onClick: upload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpLoadForm, \"/rp3qud4oN9fo8HWfgSsH5O5c5M=\", false, function () {\n  return [useHistory];\n});\n\n_c = UpLoadForm;\nexport default UpLoadForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpLoadForm\");","map":{"version":3,"sources":["D:/MSF/MSF-FRONTEND/lib/src/components/upload/UploadIndex.js"],"names":["React","useState","Button","axios","useHistory","TextField","Http","UpLoadForm","history","description","setValue","category","comment","dataFile","setDataFile","handleOnChage","event","target","name","value","upload","formData","FormData","append","resp","postSth","localStorage","getItem","url","data","response","putSth","statusCode","alert","push","handleUploadFile","files"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,MAAIC,OAAO,GAAGJ,UAAU,EAAxB;AACA,QAAM,CAACK,WAAD,EAAcC,QAAd,IAA0BT,QAAQ,CAAC;AACrCU,IAAAA,QAAQ,EAAE,EAD2B;AAErCC,IAAAA,OAAO,EAAE;AAF4B,GAAD,CAAxC;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,EAAxC;;AACA,QAAMc,aAAa,GAAIC,KAAD,IAAW;AAC7BN,IAAAA,QAAQ,CAAC,EACL,GAAGD,WADE;AAEL,OAACO,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAF7B,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMC,MAAM,GAAG,YAAY;AACvB,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBV,QAAxB;AACA,UAAMW,IAAI,GAAG,MAAMlB,IAAI,CAACmB,OAAL,CAAc,SAAQC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiC,EAAvD,EAA0DN,QAA1D,CAAnB;AACA,UAAMO,GAAG,GAAG,YAAWJ,IAAI,CAACK,IAA5B;AACA,UAAMC,QAAQ,GAAG,MAAMxB,IAAI,CAACyB,MAAL,CAAYH,GAAZ,EAAgBnB,WAAhB,CAAvB;;AACD,QAAGqB,QAAQ,CAACE,UAAT,KAAwB,GAA3B,EAA+B;AAC3BC,MAAAA,KAAK,CAAC,mDAAD,CAAL;AACCzB,MAAAA,OAAO,CAAC0B,IAAR,CAAa,GAAb;AACJ;AAEH,GAXD;;AAYA,QAAMC,gBAAgB,GAAInB,KAAD,IAAW;AAChCF,IAAAA,WAAW,CAACE,KAAK,CAACC,MAAN,CAAamB,KAAb,CAAmB,CAAnB,CAAD,CAAX;AACH,GAFD;;AAGA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,QAAxB;AAAiC,MAAA,SAAS,EAAC,QAA3C;AAAoD,MAAA,QAAQ,EAAED;AAA9D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,gBAAd;AAA+B,MAAA,KAAK,EAAC,UAArC;AAAgD,MAAA,OAAO,EAAC,UAAxD;AAAmE,MAAA,QAAQ,EAAEpB,aAA7E;AAA4F,MAAA,KAAK,EAAEN,WAAW,CAACE,QAA/G;AAAyH,MAAA,IAAI,EAAC;AAA9H;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,gBAAd;AAA+B,MAAA,KAAK,EAAC,SAArC;AAA+C,MAAA,OAAO,EAAC,UAAvD;AAAkE,MAAA,QAAQ,EAAEI,aAA5E;AAA2F,MAAA,KAAK,EAAEN,WAAW,CAACG,OAA9G;AAAuH,MAAA,IAAI,EAAC;AAA5H;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAEQ,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CArCD;;GAAMb,U;UACYH,U;;;KADZG,U;AAsCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Http from '../../http/apiService';\r\nconst UpLoadForm = () => {\r\n    let history = useHistory();\r\n    const [description, setValue] = useState({\r\n        category: '',\r\n        comment: '',\r\n    });\r\n    const [dataFile, setDataFile] = useState();\r\n    const handleOnChage = (event) => {\r\n        setValue({\r\n            ...description,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const upload = async () => {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", dataFile)\r\n        const resp = await Http.postSth(`files/${localStorage.getItem('username')}`, formData)\r\n        const url = '/files/'+ resp.data;\r\n        const response = await Http.putSth(url,description);\r\n       if(response.statusCode === 200){\r\n           alert(\"Upload Successful!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\")\r\n            history.push(\"/\")\r\n       }\r\n        \r\n    }\r\n    const handleUploadFile = (event) => {\r\n        setDataFile(event.target.files[0]);\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <input type=\"file\" name=\"upload\" className=\"upfile\" onChange={handleUploadFile} />\r\n            <TextField id=\"outlined-basic\" label=\"Category\" variant=\"outlined\" onChange={handleOnChage} value={description.category} name=\"category\" />\r\n            <TextField id=\"outlined-basic\" label=\"Comment\" variant=\"outlined\" onChange={handleOnChage} value={description.comment} name=\"comment\" />\r\n            <Button className=\"btn-signin\" onClick={upload}>Upload</Button>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default UpLoadForm;"]},"metadata":{},"sourceType":"module"}