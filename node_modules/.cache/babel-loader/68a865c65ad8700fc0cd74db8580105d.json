{"ast":null,"code":"var _jsxFileName = \"D:\\\\MSF\\\\MSF-FRONTEND\\\\lib\\\\src\\\\components\\\\files\\\\viewfile\\\\file.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport NavbarIndex from '../../nav-bar/IndexNavbar';\nimport Http from '../../../http/apiService';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FileView = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState([]);\n\n  const GetFile = async () => {\n    const url = '/files/getfile/' + id;\n    const resp = await Http.getSth(url);\n    setData(resp.data);\n  };\n\n  useEffect(() => {\n    GetFile();\n  }, []);\n\n  const upComment = async () => {\n    const url = '/comments/' + localStorage.getItem('username') + '/' + id;\n    const resp = await Http.postSth(url, value);\n    getComment();\n  };\n\n  const getComment = async () => {\n    const url = '/comments/' + id;\n    const resp = await Http.getSth(url);\n    console.log(resp);\n  };\n\n  const [value, setValue] = useState({\n    content: ''\n  });\n\n  const handleOnChage = event => {\n    setValue({ ...value,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarIndex, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"File Name: \", data.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User: \", data.userName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Comment: \", data.comment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: data.map(element => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"File Name: \", element.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"User: \", element.userName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Comment: \", element.comment]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Comment\",\n        variant: \"outlined\",\n        onChange: handleOnChage,\n        value: value.content,\n        name: \"content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: upComment,\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FileView, \"Vfipg2JK2ebLR98Gpq1H/2mHO+M=\", false, function () {\n  return [useParams];\n});\n\n_c = FileView;\nexport default FileView;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileView\");","map":{"version":3,"sources":["D:/MSF/MSF-FRONTEND/lib/src/components/files/viewfile/file.js"],"names":["React","useState","useEffect","useParams","NavbarIndex","Http","Button","TextField","FileView","id","data","setData","GetFile","url","resp","getSth","upComment","localStorage","getItem","postSth","value","getComment","console","log","setValue","content","handleOnChage","event","target","name","userName","comment","map","element"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport NavbarIndex from '../../nav-bar/IndexNavbar';\r\nimport Http from '../../../http/apiService';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nconst FileView =() =>{\r\n    const {id} = useParams();\r\n    const [data, setData] = useState([]);\r\n    const GetFile = async () => {\r\n        const url = '/files/getfile/'+id;\r\n        const resp = await Http.getSth(url)\r\n        setData(resp.data);\r\n    }\r\n    useEffect(() => {\r\n        GetFile();\r\n    }, []);\r\n    \r\n    const upComment=async ()=>{\r\n        const url = '/comments/'+localStorage.getItem('username')+'/'+id;\r\n        const resp = await Http.postSth(url,value)  \r\n        getComment();\r\n    }\r\n\r\n    const getComment = async ()=>{\r\n        const url = '/comments/'+id;\r\n        const resp = await Http.getSth(url);\r\n        console.log(resp);\r\n    }\r\n\r\n    const [value, setValue] = useState({\r\n        content: '',\r\n\r\n    });\r\n\r\n    const handleOnChage = (event) => {\r\n        setValue({\r\n            ...value,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n    return(\r\n        <>\r\n            <NavbarIndex/>\r\n            <React.Fragment>                   \r\n                            <p>File Name: {data.name}</p>\r\n                            <p>User: {data.userName}</p>\r\n                            <p>Comment: {data.comment}</p>\r\n                            <React.Fragment>\r\n                {data.map((element) => {\r\n                    return (\r\n                        <>                                            \r\n                                <p>File Name: {element.name}</p>\r\n                                <p>User: {element.userName}</p>\r\n                                <p>Comment: {element.comment}</p>\r\n                        </>              \r\n                    )\r\n                }\r\n                )\r\n                }\r\n            </React.Fragment>\r\n                            \r\n                            \r\n                            <TextField id=\"outlined-basic\" label=\"Comment\" variant=\"outlined\" onChange={handleOnChage} value={value.content} name=\"content\" />\r\n\r\n                            <Button onClick={upComment}>Comment</Button>                         \r\n            </React.Fragment>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FileView;"]},"metadata":{},"sourceType":"module"}